A01: Assignment
* python install - execute simple print statement - snapshot
* install notepad ++
* python 2 vs python 3
   
-------------

A02: Assignment 
1. Execute & practice below given py files,
        * 01 Variables.py
	* 02 Numbers.py
	* 03 Strings.py	
2. What is Garbage Collector ? Do we have garbage ccollection in python ? if yes - How it works?
3. Understand all string inbuilt functions & update details in "A02.3 String_InbuiltFunctions.xlsx"

-----------

A03: Assignment

1. write a python script 'turnOffComputer.py' to turn off my computer.
2. Write a python script 'candidateInfo_v1.py' to collect below information from candidates
   Note: use respective collections to store the data 
   a. rollNum 
   b. name - each candidate could have 'firstName', 'middleName', 'lastName' and all the names could be same as well
   c. age - should be stored as integer
   d. phoneNum - one candidate could have more than one numbers and should be unique numbers
   e. address - candidate should have both 'personalAddress' & 'officialAddress'
              - both address should have attributes 'state' & 'country'
			 
   Once data is collected from candidate from console, display it like below sample,
    ********** Thanks for entering your Information Mr.<firstName> <middleName> <lastName> *********
	Below are your details we stored,
	{
	  'rollNum' : 'R1',
	  'name' : [<firstName>, <middleName>, <lastName>],
	  'age' : 26,
	  'phoneNum' : {<phnum1>,'phNum2'},
	  'address' :
	     {
			'personalAddress' : 
			   { 
			     'state' : <state>,
				 'country' : <country>
			   },
			'officialAddress' : 
			   { 
			     'state' : <state>,
				 'country' : <country>
			   }
		 }
    }
    ***************************************************************************************************
    
    
3. Write a python script 'emailValidation_v1.py' to validate the given email id with below requirements,
    a. get the input email id from user trough console prompting 'Enter your email ID: '
	b. validate the email id with with below conditions,
	    - the total length of email is greater than 8 & less than 20
		      error message if not satisfied : 'Email id length should be greater than 8' / 'Email id length should be less than 20'
		- should start with only alphabets [a-z]
		      error message if not satisfied : 'Email id should start with alphabet
		- should contain only one '@'  	
		      error message if not satisfied : 'should contain only one '@''
		- should contain atleast 2 characters before the symbol '@'
		      error message if not satisfied : 'should contain atleast 2 characters before the symbol '@''
        - - should contain only one '.'  	
		      error message if not satisfied : 'should contain only one '.''			  
		- should contain atleast 2 characters between the symbol '@' & '.'
		      error message if not satisfied : 'should contain atleast 2 characters between the symbol '@' & '.'
		- should contain atleast 3 characters after the symbol  '.'
		      error message if not satisfied : should contain atleast 3 characters after the symbol  '.'
			  
    c. If above cconditions are satisfied , then display 'The entered email id : <emailId> is valid', else display 'The entered email id : <emailId> is invalid due to reasons : [<reason>]'

4. Write a python script  "calculator_v1.py" to perform arithematic operations. user should be able to see the available operations as a.Add, b.Subtract, c. Divide,    d.Multiply & ask user to select the option. Also get two input numbers & perform the selected operation.

5. Enhance 'turnOffComputer.py' to prompt use "Do you want to turn off 1.'Now' or 2.'Later'" . 
If selected "Now" , shutdown immedeitly. 
Else if selected option is "Later" , 
  Prompt for "ExactTime" of "RelativeTime". 
     If selected "ExactTime" - shutdown at exacted time mentioned.
	 Else if selected "RelativeTime" -
	 Prompt for how many minutes later ?
      Then shut down after the specified minutes.
      
  Note: use datetime & os packages
  
-------------

A05: Assignment

1. Write a python script print_even_numbers_v1.py to print all even numbers from 0 to 10.
2. Write a python script count_5_divisible_numbers_v1.py to display how many 5 divisible numbers available from 1 to 100.
3. Write a python script display_stars_v1.py to print * in lines based on given input n.
   if n =2, create a structure as below  
          *
	 * *
   if n =3, create a structure as below  
          *
	 * *
	* * *
   - n should be in range 1 to 5 , only. if not - print "N is beyond range - enter between 0 to 5"  
4. Write a python script calculator_v2.py by enhancing the calculator_v1.py (done in Session 04 Assignment ,A04) with below new requirements 
        a. after getting 2 inputs from user, check the first entered number should always be greater than 2nd entered number.
	   if 1st num is not greater than 2nd , reassign and consider 2nd num as 1st and display to user 
	   "YOUR ENTERED FIRST NUMBER IS SMALLER THAN 2ND NUMBER, SO CONSIDERING GREATEST NUM AS 1ST NUM TO DO THE OPERATION"
	
	b. once the selected operation is done and output is displayed, prompt the user to continue calculations,
	   "Do you want to continue calculations ? Press 'Y' to continue, Press 'N' to stop "
	    IF 'Y' - then continue the program from beginning, asking to enter numbers , IF 'N' -> end the program
	    If any other key is pressed other than Y/N -> print "Invalid Selection. Bye..!" and end the program,
5. Write a python script "name_alphabet_counts_v1.py" to display how many number of times each alphabet is present in your name
   ex: if entered name = 'The TechSnippets", output should be, (case insensitive operation)
       {A=0, B=0, C=1, D=0, E=3,F=0, G=0, H=1, I=1.........Z=0}
	   
-------------

A06: Assignment

1. Develop the game "rock, paper, scissor" using Python to play against the computer.

-------------
